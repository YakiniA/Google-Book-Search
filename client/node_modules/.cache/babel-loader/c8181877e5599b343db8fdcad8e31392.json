{"ast":null,"code":"import _slicedToArray from \"/Users/yakiniarumugakani/Documents/Homework/Google-Book-Search/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/yakiniarumugakani/Documents/Homework/Google-Book-Search/client/src/pages/Books.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport Button from \"../components/Button\";\nimport { BookList, BookListItem } from \"../components/BookList\";\nimport API from \"../utils/API\";\n\nfunction Books() {\n  // Initialize books as an empty array\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      results = _useState6[0],\n      setResults = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  var searchTitle = useRef();\n  useEffect(() => {\n    loadBooks();\n  }, []);\n\n  var handleInputChange = event => {\n    var value = event.target.value;\n    setSearch(value);\n  };\n\n  var handleFormSubmit = event => {\n    event.preventDefault();\n    console.log(\"Search\" + search);\n    API.getGoogleBooks(search).then(res => {\n      if (res.data.status === \"error\") {\n        throw new Error(res.data);\n      }\n\n      console.log(res.data);\n      setResults(res.data);\n      setBooks(res.data);\n    }).catch(err => setError({\n      error: err.message\n    }));\n  };\n\n  function loadBooks() {\n    // Add code here to get all books from the database and store them using setBooks\n    API.getBooks().then(response => {\n      setBooks(response.data);\n    });\n  }\n\n  function deleteBooks(id) {\n    // Add code here to get all books from the database and store them using setBooks\n    API.deleteBook(id).then(response => {\n      loadBooks();\n    });\n  }\n\n  function saveBook() {\n    // Add code here to get all books from the database and store them using setBooks\n    var bookData = {//  title : titleRef.current.value,\n      //  author : authorRef.current.value,\n      //  synopsis : synopsisRef.current.value\n    };\n    API.saveBook(bookData).then(response => {\n      setBooks(response.data);\n      alert();\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Jumbotron, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-9 sm-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    name: \"title\",\n    value: search,\n    onChange: handleInputChange,\n    placeholder: \"Book Name (required)\",\n    inputarea: searchTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-3 sm-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleFormSubmit,\n    type: \"success\",\n    className: \"input-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Search\"))))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    size: \"xs-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Book Search Results\"), !books.length ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"No Books to Display\") : /*#__PURE__*/React.createElement(BookList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }, books.map(book => {\n    return /*#__PURE__*/React.createElement(BookListItem, {\n      key: book.data.items,\n      title: book.data.items,\n      href: book.href,\n      ingredients: book.ingredients,\n      thumbnail: book.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    });\n  }))))));\n}\n\nexport default Books;","map":{"version":3,"sources":["/Users/yakiniarumugakani/Documents/Homework/Google-Book-Search/client/src/pages/Books.js"],"names":["React","useState","useEffect","useRef","Input","TextArea","FormBtn","Jumbotron","Container","Row","Col","Nav","Button","BookList","BookListItem","API","Books","books","setBooks","search","setSearch","results","setResults","error","setError","searchTitle","loadBooks","handleInputChange","event","value","target","handleFormSubmit","preventDefault","console","log","getGoogleBooks","then","res","data","status","Error","catch","err","message","getBooks","response","deleteBooks","id","deleteBook","saveBook","bookData","alert","length","map","book","items","href","ingredients","thumbnail"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Input, TextArea, FormBtn } from \"../components/Form\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport { Container, Row, Col } from \"../components/Grid\";\nimport Nav from \"../components/Nav\"\nimport Button from \"../components/Button\"\nimport { BookList, BookListItem } from \"../components/BookList\"\nimport API from \"../utils/API\";\n\n\nfunction Books() {\n  // Initialize books as an empty array\n    const [books, setBooks] = useState([]);\n    const [search, setSearch] = useState([]);\n    const [results , setResults] = useState([]);\n    const [error , setError] = useState([]);\n    const searchTitle = useRef();\n    \n    useEffect(() => {\n      loadBooks();\n    }, []);\n\n   const handleInputChange = event => {\n     const { value } = event.target;\n     setSearch(value);\n    };\n\n    const handleFormSubmit = event => {\n      event.preventDefault();\n      console.log(\"Search\" +search);\n      API.getGoogleBooks(search)\n        .then(res => {\n          if (res.data.status === \"error\") {\n            throw new Error(res.data);\n          }\n          console.log(res.data);\n         setResults(res.data);\n         setBooks(res.data);\n       \n        })\n        .catch(err => setError({ error: err.message }));\n    };\n\n    function loadBooks() {\n      // Add code here to get all books from the database and store them using setBooks\n   \n      API.getBooks().then((response) => {\n        setBooks(response.data);\n      });\n  \n    }\n\n    function deleteBooks(id) {\n      // Add code here to get all books from the database and store them using setBooks\n   \n      API.deleteBook(id).then((response) => {\n        loadBooks();\n      });\n  \n    }\n\n    function saveBook() {\n      // Add code here to get all books from the database and store them using setBooks\n    const bookData = {\n        //  title : titleRef.current.value,\n        //  author : authorRef.current.value,\n        //  synopsis : synopsisRef.current.value\n    }\n      API.saveBook(bookData).then((response) => {\n        setBooks(response.data);\n       alert()\n      });\n  \n    }\n\n    return (\n      <div>\n\n      <Nav />\n      <Jumbotron />\n      <Container>\n        <Row>\n          <Col size=\"md-12\">\n            <form>\n              <Container>\n                <Row>\n                  <Col size=\"xs-9 sm-10\">\n                    <Input\n                      name=\"title\"\n                      value={search}\n                      onChange={handleInputChange}\n                      placeholder=\"Book Name (required)\"\n                      inputarea= {searchTitle} \n                    />\n                  </Col>\n                  <Col size=\"xs-3 sm-2\">\n                    <Button\n                      onClick={handleFormSubmit}\n                      type=\"success\"\n                      className=\"input-lg\"\n                    >\n                        Search\n                    </Button>\n                  </Col>\n                </Row>\n              </Container>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"xs-12\">\n            <h1>Book Search Results</h1>\n            {!books.length ? (\n              <h1 className=\"text-center\">No Books to Display</h1>\n            ) : (\n              <BookList>\n                {books.map(book => {\n                  return (\n                    <BookListItem\n                      key={book.data.items}\n                      title={book.data.items}\n                      href={book.href}\n                      ingredients={book.ingredients}\n                      thumbnail={book.thumbnail}\n                    />\n                  );\n                })}\n              </BookList>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n     \n    );\n  }\n\nexport default Books;\n"]},"metadata":{},"sourceType":"module"}